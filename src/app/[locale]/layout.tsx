//
import { NextIntlClientProvider, hasLocale } from "next-intl";
import type { Metadata } from "next";
import { setRequestLocale } from "next-intl/server";
import { AuthProvider } from "@/context/AuthContext";
import { BooksProvider } from "@/context/BooksContext";
import { CartProvider } from "@/context/CartContext";
import { Toaster } from "react-hot-toast";
import { notFound } from "next/navigation";
import { Geist } from "next/font/google";
import { routing } from "@/i18n/routing";
import { OrdersProvider } from "@/context/OrderContext";
import "./globals.css";
// import { TransactionProvider } from "@/context/TransactionContext";
// import PaymobRedirect from "./payment-redirect/page";

export const metadata: Metadata = {
  title: "IBook",
  description: "Generated by create next app",
};

const geist = Geist({
  subsets: ["latin"],
});

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  // Enable static rendering
  setRequestLocale(locale);

  return (
    <html lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'} className={geist.className}>
      <body className="antialiased">
        <NextIntlClientProvider>
          <Toaster position="top-right" reverseOrder={false} />
          <AuthProvider>
            <BooksProvider>
              <CartProvider>
                <OrdersProvider>
                  {/* <PaymobRedirect /> */}
                  {children}
                </OrdersProvider>
              </CartProvider>
            </BooksProvider>
          </AuthProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
